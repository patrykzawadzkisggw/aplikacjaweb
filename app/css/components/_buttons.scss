@use './colors';

input,select {
    background-color: #F3F6FB;
    font-size: 1rem;
    border: none;
}

.input,main {
    position: relative;
}
.input::before {
    content: attr(data-val);
    font-size: .7rem;
    color: #8D9AAF;
    position: absolute;
    top: 1rem;
    left:2rem;
    transform: translate(0,-100%);
    width: 5px;
    height: 5px;
}
.input::after {
    content: '';
    background: url('../img/user.svg');
    background-size: contain;
    background-repeat: no-repeat;
    width: 1.3rem;
    height: 1.3rem;
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translate(0,-50%);
}

.input input,select {
    width: 100%;
    padding: 1.5rem 1.5rem;
    border-radius: 1.5rem;
    font-weight: bold;
    
}
.remove {
    width: 3rem;
    height: 3rem;
    
   
    background: url('../img/cart-remove.svg');
    background-size: 70%;
    border-radius: 50%;
    background-repeat: no-repeat;
    background-position: center;
    opacity: 60%;
    &:hover {
        background-color: darken($color: $accent, $amount: 5%);
        cursor: pointer;
        opacity: 100%;
    }
}

$imgs: ('phone':'../img/call.svg',search:'../img/search.svg',pass:'../img/unhide.svg',
        filter:'../img/filter.svg',street:'../img/home-1.svg', country:'../img/globe.svg',
        city:'../img/target-2.svg',zip:'../img/key.svg', remove:'../img/cart-remove.svg', empty: '');
@each $key, $value in $imgs {
    .input.#{$key}::after {
        background: url($value);
        background-size: contain;
        background-repeat: no-repeat;
    }
}



.btn {
    padding: 1rem;
    background: $accent;
    color: $white;
    border-radius: 2rem;
    margin-top: 1rem;
    font-weight: bold;

    &:hover {
        cursor: pointer;
        background: darken($color: $accent, $amount: 5%);
    }
}

.btn--inverse {
    color: $accent;
    background: $white;
    &:hover {
        background: darken($color: $white, $amount: 5%);
    }
}
.black .btn.btn--inverse {
    background-color: black;
    color: $accent;
    &:hover {
        background: lighten($color: black, $amount: 10%);
        
    }
}
.input input:hover, .input input:focus,select:focus,select:hover {
    outline: 2px solid $accent;
    outline-offset: -5px;
}

.input:focus-within::before, .input:focus-within::before {
    color: $accent;
    
}

.filter {
    background: url('../img/filter.svg');
    padding: 1rem;
    background-position: center;
    background-size: 50%;
    background-repeat: no-repeat;
    width: 4rem;
    height: 4rem;
    border-radius: 50%;
    &:hover {
        cursor: pointer;
        background-color: darken($color: $white, $amount: 5%);
    }
}

.numberbox {
    background-color: #F3F6FB;
    border-radius: 2rem;
    width: max-content;
    padding: 5px;
    margin: 1rem 0;
    input[type='button'] {
        background-color: $white;
        padding: 1rem;
        width: 3rem;
        height: 3rem;
        border-radius: 50%;
        font-weight: bold;
        &:hover {
            background-color: darken($color: $white, $amount: 10%);
            cursor: pointer;
        }
    }

    input[type='number'] {
        font-size: 2rem;
        text-align: center;
        width: 3ch;
        border: none;
        outline: none;
    }
}

option {
    padding: 1rem;
    background-color: $white;
    font-size: 2rem;
    border-radius: 2rem;
}

option:hover {
    background-color: $accent;
}

.errorTxt {
    color: red;
    font-size: 0.7rem;
    padding-left: 0.7rem;
    display: none;
}

.input input.error {
    outline: 2px solid red;
    outline-offset: -5px;
}

.input:has(input.error)+ .errorTxt {
    display: block;
}

input[type='file'] {
    border-radius: 2rem;
}
.black {
    .input.search {
        background-color: #272636
    }
}

.black {
    --white: black;
}